<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC4656 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4656.xml">
<!ENTITY RFC5357 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5357.xml">
<!ENTITY RFC8174 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC2104 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2104.xml">
<!ENTITY RFC2113 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2113.xml">
<!ENTITY RFC4868 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4868.xml">
<!ENTITY RFC7880 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7880.xml">
<!ENTITY RFC6038 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6038.xml">
<!ENTITY RFC6437 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6437.xml">
<!ENTITY RFC6936 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6936.xml">
<!ENTITY RFC7506 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7506.xml">
<!ENTITY RFC7820 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7820.xml">
<!ENTITY RFC8029 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8029.xml">
<!ENTITY RFC8186 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8186.xml">
<!ENTITY RFC8321 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8321.xml">
<!ENTITY RFC8402 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8402.xml">
<!ENTITY RFC8754 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8754.xml">
<!ENTITY RFC8762 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8762.xml">
<!ENTITY I-D.ietf-spring-segment-routing-policy SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-spring-segment-routing-policy.xml">
<!ENTITY I-D.ietf-spring-mpls-path-segment SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-spring-mpls-path-segment.xml">
<!ENTITY I-D.ietf-pce-binding-label-sid SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-pce-binding-label-sid.xml">
<!ENTITY I-D.ietf-pce-sr-bidir-path SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-pce-sr-bidir-path.xml">
<!ENTITY I-D.gandhi-spring-twamp-srpm SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.gandhi-spring-twamp-srpm.xml">
<!ENTITY I-D.gandhi-spring-stamp-srpm SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.gandhi-spring-stamp-srpm.xml">
<!ENTITY I-D.ietf-spring-srv6-network-programming SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-spring-srv6-network-programming.xml">
]>
<rfc category="std" docName="draft-gandhi-spring-sr-enhanced-plm-01"
     ipr="trust200902" submissionType="IETF">
  <!-- Generated by id2xml 1.5.0 on 2020-02-06T01:41:26Z -->

  <?rfc compact="yes"?>

  <?rfc text-list-symbols="oo*+-"?>

  <?rfc subcompact="no"?>

  <?rfc sortrefs="no"?>

  <?rfc symrefs="yes"?>

  <?rfc strict="yes"?>

  <?rfc toc="yes"?>

  <front>
    <title abbrev="Performance and Liveness Monitoring in SR">
    Performance Delay and Liveness Monitoring in Segment Routing Networks</title>

    <author fullname="Rakesh Gandhi" initials="R." role="editor"
            surname="Gandhi">
      <organization>Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street>Canada</street>
        </postal>

        <email>rgandhi@cisco.com</email>
      </address>
    </author>

    <author fullname="Clarence Filsfils" initials="C." surname="Filsfils">
      <organization>Cisco Systems, Inc.</organization>

      <address>
        <email>cfilsfil@cisco.com</email>
      </address>
    </author>

    <author fullname="Navin Vaghamshi" initials="N." surname="Vaghamshi">
      <organization>Reliance</organization>

      <address>
        <email>Navin.Vaghamshi@ril.com</email>
      </address>
    </author>

    <author fullname="Moses Nagarajah" initials="M." surname="Nagarajah">
      <organization>Telstra</organization>

      <address>
        <email>Moses.Nagarajah@team.telstra.com</email>
      </address>
    </author>

    <date day="10" month="May" year="2020"/>

    <workgroup>SPRING Working Group</workgroup>

    <abstract>
      <t>Segment Routing (SR) leverages the source routing paradigm. SR is
      applicable to both Multiprotocol Label Switching (SR-MPLS) and IPv6
      (SRv6) data planes. This document defines procedure for 
      Performance Delay and Liveness Monitoring (PDLM) in Segment Routing networks.
      The procedure uses the probe messages defined in RFC 5357 (Two-Way
      Active Measurement Protocol (TWAMP) Light) and RFC 8762 (Simple 
      Two-Way Active Measurement Protocol (STAMP)) for SR Paths including 
      SR Policies with both SR-MPLS and SRv6 data planes.</t>
    </abstract>
  </front>

  <middle>
    <section anchor="sect-1" title="Introduction">
      <t>Segment Routing (SR) leverages the source routing paradigm and
      greatly simplifies network operations for Software Defined Networks
      (SDNs). SR is applicable to both Multiprotocol Label Switching (SR-MPLS)
      and IPv6 (SRv6) data planes <xref target="RFC8402"/>. SR takes advantage
      of the Equal-Cost Multipaths (ECMPs) between source and transit nodes,
      between transit nodes and between transit and destination nodes. SR
      Policies as defined in <xref format="default"
      target="I-D.ietf-spring-segment-routing-policy"/> are used to steer
      traffic through a specific, user-defined paths using a stack of
      Segments. Built-in Liveness Monitoring for detecting faults as well as
      Performance Delay Measurement (DM) and Loss Measurement (LM) are essential requirements to
      provide Service Level Agreements (SLAs) in SR networks.</t>

      <t>The One-Way Active Measurement Protocol (OWAMP) defined in <xref
      target="RFC4656"/> and Two-Way Active Measurement Protocol (TWAMP)
      defined in <xref target="RFC5357"/> provide capabilities for the
      measurement of various performance metrics in IP networks using probe
      messages. The TWAMP Light [Appendix I in RFC 5357] provides simplified
      mechanisms for active performance measurement in Customer IP networks by
      provisioning UDP paths that eliminates the need for control-channel
      signaling. Similarly, the Simple Two-way Active Measurement Protocol (STAMP)
      <xref target="RFC8762"/> alleviates the need for control-channel signaling by using
      configuration data model to provision a test-channel.  
      <xref target="I-D.gandhi-spring-twamp-srpm"/> defines procedure
      for using TWAMP Light messages with user-defined IP/UDP 
      paths in SR networks and is applicable to both SR-MPLS and SRv6 data planes. 
      <xref target="I-D.gandhi-spring-stamp-srpm"/> defines similar 
      procedure using STAMP messages.</t>

      <t>For Liveness Monitoring, Seamless Bidirectional Forwarding Detection (S-BFD)
      <xref target="RFC7880"/> can be used in Segment Routing networks.
      However, S-BFD requires protocol support on the reflector node to process
      the S-BFD packets as packets are punted from forwarding path in order to
      send reply thereby limiting the scale for number of sessions and fault
      detection interval. In addition, S-BFD protocol does not have the
      capability today to enable performance delay and loss monitoring in SR
      networks. Enabling multiple protocols in SR networks, S-BFD for liveness
      monitoring and TWAMP Light or STAMP for performance delay and loss monitoring increases
      the deployment and operational complexities in SR networks.</t>

      <t>This document defines procedure for 
      Performance Delay and Liveness Monitoring (PDLM) in Segment Routing networks.
      The procedure uses the probe messages defined in  <xref target="RFC5357"/> (TWAMP Light) and 
      <xref target="RFC8762"/> (STAMP) for SR Paths including SR Policies with both
      SR-MPLS and SRv6 data planes.</t>
    </section>

    <section anchor="sect-2" title="Conventions Used in This Document">
      <section anchor="sect-2.1" title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
        appear in all capitals, as shown here.</t>
      </section>

      <section anchor="sect-2.2" title="Abbreviations">
        <t>BFD: Bidirectional Forwarding Detection.</t>

        <t>BSID: Binding Segment ID.</t>

        <t>DM: Delay Measurement.</t>

        <t>ECMP: Equal Cost Multi-Path.</t>

        <t>LM: Loss Measurement.</t>

        <t>MPLS: Multiprotocol Label Switching.</t>

        <t>OWAMP: One-Way Active Measurement Protocol.</t>

        <t>PDLM: Performance Delay and Liveness Monitoring.</t>

        <t>PM: Performance Measurement.</t>

        <t>PTP: Precision Time Protocol.</t>

        <t>SID: Segment ID.</t>

        <t>SL: Segment List.</t>

        <t>SR: Segment Routing.</t>

        <t>SRH: Segment Routing Header.</t>

        <t>SR-MPLS: Segment Routing with MPLS data plane.</t>

        <t>SRv6: Segment Routing with IPv6 data plane.</t>
	
	   <t>STAMP: Simple Two-way Active Measurement Protocol.</t>

        <t>TWAMP: Two-Way Active Measurement Protocol.</t>
      </section>

    <section title="Reference Topology" anchor="sect-2.3"><t>
    In the reference topology shown below, the nodes R1 and R5 are connected via 
    Point-to-Point (P2P) SR Path such as SR Policy
    <xref target="I-D.ietf-spring-segment-routing-policy"/> 
    originating on node R1 with endpoint on node R5.</t>

      <figure anchor="ure-reference-topology" title="Reference Topology">
        <artwork>
               +-------+ t1   Probe          +-------+
               |       | - - - - - - - - - - |       |
               |   R1  |====================||  R5   |
               |       |&lt;- - - - - - - - - - |       |
               +-------+ t4   Return Probe   +-------+
                Sender                       Reflector
                                             (Simply Forward)
       </artwork>
      </figure>
      </section>
 
    <section title="Loopback Mode" anchor="sect-2.4"><t>
    In loopback mode, the sender node R1 initiates probe messages and the reflector node R5
    forwards them back to the sender node R1 just like data packets for the normal traffic. 
    The probe messages are not punted at the reflector node
    and it does not process them and generate response messages.
    The reflector node 
    must not drop the loopback probe messages, for example, due to a local policy 
    provisioned on the node.</t>
     </section>
     </section>
 
    <section title="Protocol Overview" anchor="sect-3"><t>
    The TWAMP Light probe messages for delay measurement as defined in <xref
    target="RFC5357"/> or STAMP probe messages as defined in <xref target="RFC8762"/> 
    are sent by the sender node R1 to the reflector 
    node R5 in loopback mode as shown in Figure 1. The probe messages are sent by the sender node on the
    congruent path of the data traffic flowing on the SR Path.</t>
 
    <t>The UDP destination port number in the probe message is user-configured 
    from the range specified in <xref target="RFC8762"/>.
    The Source and Destination IP addresses in the probe messages are set to the reflector 
    and the sender node addresses, respectively.
    The IPv4 Time To Live (TTL) and IPv6 Hop Limit (HL) are set to 255.</t>
 
    <t>No PM session is created on the reflector node R5.
    As the probe message is not punted on the reflector node for processing, the Sender
    copies the 'Sequence Number' in 'Session-Sender Sequence Number' field directly.  
    Also, the Sender Timestamp, Sender Error 
    Estimate and Sender TTL fields <xref target="RFC5357"/>  <xref target="RFC8762"/> 
    in the probe message are not used.</t>
 
    <section title="Example Provisioning Model" anchor="sect-3.1"><t>
    An example of a provisioning model and typical measurement parameters for the 
    user-configured destination UDP port is shown in Figure 2:</t>
 
    <figure title="Example Provisioning Model" anchor="ure-example-provisioning-model"><artwork><![CDATA[

                             +------------+
                             | Controller |
                             +------------+
  Destination UDP Port            /  \      Network Programming Label
  Measurement Protocol           /    \     Timestamp2 Offset
  PDLM Mode                     /      \    Timestamp Format
     LB or Enhanced LB         /        \
  Authentication Mode & Key   /          \     
  Network Programming Label  /            \
  Timestamp Format          /              \
                           /                \ 
                          v                  v
                     +-------+            +-------+
                     |       |  SR Path   |       |
                     |   R1  |============|   R5  |
                     |       |            |       |
                     +-------+            +-------+
                      Sender              Reflector
]]></artwork>
	</figure>

    <t>Example of Measurement Protocol is TWAMP Light and STAMP, example of  
    Timestamp Format is PTPv2 <xref target="IEEE1588"/> and NTP, etc.</t>
    
    <t>The mechanisms to provision the
    sender and reflector nodes are outside the scope of this document.</t>
    </section>

    </section>

     <section anchor="sect-4" title="Performance Delay and Liveness Monitoring">
      <t>For performance delay and liveness monitoring of an SR Path including SR Policy, 
      loopback mode is used.  The PM probe messages 
      are sent by the sender head-end node R1 to the reflector endpoint
      node R5 of the SR Policy as shown in Figure 1.</t>

      <t>The probe messages are sent using the Segment List (SL) of the Candidate-paths of the SR Policy
      <xref target="I-D.ietf-spring-segment-routing-policy"/>.
      When a Candidate-path has more than one Segment Lists, multiple
      probe messages are sent, one using each Segment List. The probe messages are received back by
      the sender node via IP/UDP <xref target="RFC0768"/> return path by default. 
      The Segment List of the return SR path can be added in the probe message header
      to receive the probe response on a specific path using the mechanisms
      defined in <xref target="I-D.ietf-pce-binding-label-sid"/> and <xref
      target="I-D.ietf-pce-sr-bidir-path"/>.</t>

      <t>Liveness failure is notified when consecutive N number of probe
      messages are not received back at the sender, where N is locally
      provisioned value. For delay measurement, 
      the timestamps t1 and t4 collected by the probes are used to measure round-trip delay.
      The delay metrics are notified when consecutive 
      M number of probe messages have measured delay values violate user-configured threshold,
      where M is also locally provisioned value.</t>

    <section anchor="sect-4.1" title="Probe Message for SR-MPLS">
     <t>The TWAMP Light or STAMP probe messages for SR-MPLS data plane are 
     sent using the MPLS header containing the label stack of the SR
     Policy as shown in Figure 3. In case of IP/UDP
     return path, the MPLS header is removed by the reflector node.
     The label stack can contain a reverse SR-MPLS 
     path to receive the reply on a specific path. 
     In this case, the MLS header will not be removed
     by the reflector node.</t>

        <figure anchor="ure-probe-message-header-for-sr-mpls"
                title="Example Probe Message for SR-MPLS">
          <artwork>  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |            Label(1)                   | TC  |S|      TTL      |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  .                                                               .
  .                                                               .
  .                                                               .
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |            Label(n)                   | TC  |S|      TTL      |
  +---------------------------------------------------------------+
  | IP Header                                                     |
  .  Source IP Address = Reflector IPv4 or IPv6 Address           .
  .  Destination IP Address = Sender IPv4 or IPv6 Address         .
  .  Protocol = UDP                                               .
  .                                                               .
  +---------------------------------------------------------------+
  | UDP Header                                                    |
  .  Source Port = As chosen by Sender                            .
  .  Destination Port = User-configured Port                      .
  .                                                               .
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |  Payload as defined in Section 4.2.1 of RFC 5357 |            |
  |  Payload as defined in Section 4.2 of RFC 8762                |
  .                                                               .
  +---------------------------------------------------------------+</artwork>
        </figure>
      </section>

     <section anchor="sect-4.2" title="Probe Message for SRv6">
      <t>The TWAMP Light or STAMP probe messages for SRv6 data plane are sent using the 
      Segment Routing Header (SRH) <xref target="RFC8754"/> containing 
      the Segment List of the SR Policy as shown in Figure 4. In case of IP/UDP
      return path, the SRH is removed by the reflector node.
      The Segment List can contain a reverse SRv6 path to receive 
      the reply on a specific path. In this case, the SRH will not be removed
      by the reflector node.</t>

        <figure anchor="ure-probe-message-header-for-srv6"
                title="Example Probe Message for SRv6">
          <artwork>  
  +---------------------------------------------------------------+
  | IP Header                                                     |
  .  Source IP Address = Sender IPv6 Address                      .
  .  Destination IP Address = Next Hop IPv6 Address               .
  .                                                               .
  +---------------------------------------------------------------+
  | SRH as specified in RFC 8754                                  |
  .     &lt;Segment List&gt;                                            .
  .                                                               .
  +---------------------------------------------------------------+
  | IP Header                                                     |
  .  Source IP Address = Reflector IPv6 Address                   .
  .  Destination IP Address = Sender IPv6 Address                 .
  .                                                               .
  +---------------------------------------------------------------+
  | UDP Header                                                    |
  .  Source Port = As chosen by Sender                            .
  .  Destination Port = User-configured Port                      .
  .                                                               .
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |  Payload as defined in Section 4.2.1 of RFC 5357 |            |
  |  Payload as defined in Section 4.2 of RFC 8762                |
  .                                                               .
  +---------------------------------------------------------------+</artwork>
        </figure>
      </section>
    </section>

    <section anchor="sect-5"
             title="Enhanced Performance Delay and Liveness Monitoring">
      <t>The enhanced performance delay and liveness monitoring of an SR Path including SR Policy is
      defined using the loopback mode enabled with network programming.
      The network programming function optimizes the "operations of punt, 
      add receive timestamp and inject the probe packet" on the reflector 
      node and is implemented in hardware. In this
      mode, both transmit (t1) and receive (t2) timestamps in data plane are collected
      by the probe messages sent in loopback mode as shown in Figure 5.
      The payload of the probe message is not modified by any intermediate nodes.</t>	      

      <figure align="center"
              anchor="ure-loopback-mode-enabled-with-network-programming"
              title="Loopback Mode Enabled with Network Programming">
       <artwork>
               +-------+ t1    Probe      t2 +-------+
               |       | - - - - - - - - - - |       |
               |   R1  |====================||  R5   |
               |       |&lt;- - - - - - - - - - |       |
               +-------+     Return Probe    +-------+
                Sender                       Reflector
                                             (Timestamp, 
                                              Pop and Forward)
      </artwork>
      </figure>
   
      <t> The sender node adds transmit (t1)
      timestamp in the payload of the TWAMP Light or STAMP probe message and clears the receive (t2) timestamp. 
      The endpoint node adds the receive timestamp (at the fixed location 
      locally provisioned consistently in the network) in the 
      payload of the received TWAMP Light or STAMP probe 
      message without punting the probe message in control-plane. The reflector endpoint node only
      adds the receive timestamp if the source address in the probe message matches
      the local node address to ensure that the receive timestamp is returned by the 
      intended endpoint node. In addition, the UDP port in the probe message must be
      locally programmed for adding the timestamp in the probe message. The one-way delay 
      is measured using the receive (t2) and transmit (t1) timestamps in the probe message.</t>

      <t>Timestamp format recommended is 64-bit PTPv2 <xref target="IEEE1588"/> as
      specified in <xref target="RFC8186"/> implemented in hardware. Note that the timestamp format can be 
      locally provisioned as part of enabling the network programming function. In addition to
      adding the timestamp in the message, the "Error Estimate" field in the payload
      of the message is updated using the procedure defined in <xref target="RFC4656"/>.</t>

      <t>The network programming function is enabled to add receive timestamp
      in the payload of the probe message at a specific location which is also locally
      provisioned. In TWAMP Light message defined in Section 4.2.1 of <xref target="RFC5357"/>  
      or STAMP message defined in <xref target="RFC8762"/> for  
      delay measurement, the 64-bit receive timestamp is added at byte-offset 16 which is 
      from the start of the payload.</t>

      <t>Liveness failure is notified when consecutive N number of probe
      messages are not received back at the sender, where N is locally
      provisioned value. Similarly, delay metrics are notified when consecutive 
      M number of probe messages have measured delay values violate user-configured threshold,
      where M is also locally provisioned value.</t>

      <section anchor="sect-5.1"
               title="Probe Message with Network Programming for SR-MPLS"
               toc="default">
      <t>In this document, new Timestamp Label (special purpose label with
      value TBD1) is defined for SR-MPLS data plane to enable network programming
      function for timestamp, pop and forward the received packet.</t>

      <t>In the probe message with network programming for SR-MPLS,
      Timestamp Label is added in the MPLS header as shown in Figure 6, to
      collect "Receive Timestamp" field in the payload of the TWAMP Light <xref
      target="RFC5357"/> or STAMP probe message. When a node receives a message with
      Timestamp Label, other than timestamping the message at a fixed location, 
      the node pops the Timestamp Label and forwards the
      message using the next label or IP header in the message (just like the 
      data packets for the normal traffic).</t>

        <figure anchor="ure-probe-message-header-for-sr-mpls-with-timestamp-label"
                title="Example Probe Message with Timestamp Label for SR-MPLS">
          <artwork>
  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |            Label(1)                   | TC  |S|      TTL      |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  .                                                               .
  .                                                               .
  .                                                               .
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |            Label(n)                   | TC  |S|      TTL      |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |            Timestamp Label (TBA1)     | TC  |S|      TTL      |
  +---------------------------------------------------------------+
  | IP Header                                                     |
  .  Source IP Address = Reflector IPv4 or IPv6 Address           .
  .  Destination IP Address = Sender IPv4 or IPv6 Address         .
  .  Protocol = UDP                                               .
  .                                                               .
  +---------------------------------------------------------------+
  | UDP Header                                                    |
  .  Source Port = As chosen by Sender                            .
  .  Destination Port = User-configured Port                      .
  .                                                               .
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |  Payload as defined in Section 4.2.1 of RFC 5357              |
  |  Payload as defined in Section 4.2 of RFC 8762                |
  .                                                               .
  +---------------------------------------------------------------+</artwork>
        </figure>

      <section anchor="sect-5.1.1"
               title="Node Capability for Timestamp Label"
	       toc="default">
      <t>The ingress node needs 
      to know if the egress node can process the Timestamp Label. The signaling extension 
      for this capability exchange is outside the scope of this document.</t>

      <t>Another way is to leverage a centralized controller (e.g., SDN
      controller) to program the ingress and egress nodes.  In this case, the controller
      MUST make sure (e.g., by some capability discovery mechanisms outside
      the scope of this document) that the egress node can process the Timestamp Label.</t>
      </section>
      </section>

      <section anchor="sect-5.2"
               title="Probe Message with Network Programming for SRv6">
      <t>In this document, new Endpoint function "Timestamp and Forward
      (TSF)" (value TBD2) is defined for Segment Routing Header (SRH) <xref
      target="RFC8754"/> for SRv6 data plane to enable
      network programming function for timestamp and forward the received
      message.</t>

      <t>In the probe message with network programming for SRv6,
      END.TSF function is added for the Endpoint Segment Identifier (SID) in SRH 
      <xref target="RFC8754"/> as shown in Figure 7,
      to collect "Receive Timestamp" field in the payload of the TWAMP Light <xref
      target="RFC5357"/> or STAMP probe message. When a node receives a packet with
      END.TSF function for the target SID which is local, 
      other than timestamping the packet at a fixed location,
      the node forwards the packet using the next SID or IP header in the packet 
      (just like the packets for the normal traffic).</t>

        <figure anchor="ure-probe-message-header-for-srv6-with-endpoint-function"
                title="Example Probe Message with Endpoint Function for SRv6">
          <artwork>
  +---------------------------------------------------------------+
  | IP Header                                                     |
  .  Source IP Address = Sender IPv6 Address                      .
  .  Destination IP Address = Next Hop IPv6 Address               .
  .                                                               .
  +---------------------------------------------------------------+
  | SRH as specified in RFC 8754                                  |
  .     &lt;Segment List&gt;                                            .
  .                                                               .
  +---------------------------------------------------------------+
  | IP Header                                                     |
  .  Source IP Address = Reflector IPv6 Address                   .
  .  Destination IP Address = Sender IPv6 Address                 .
  .                                                               .
  +---------------------------------------------------------------+
  | UDP Header                                                    |
  .  Source Port = As chosen by Sender                            .
  .  Destination Port = User-configured Port                      .
  .                                                               .
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |  Payload as defined in Section 4.2.1 of RFC 5357 |            |
  |  Payload as defined in Section 4.2 of RFC 8762                |
  .                                                               .
  +---------------------------------------------------------------+</artwork>
        </figure>
      </section>
    </section>


   <section anchor="sect-6" title="ECMP Handling" toc="default">
     <t>An SR Policy can have ECMPs between the source and transit nodes,
      between transit nodes and between transit and destination nodes. 
      The PM probe messages need to be sent to traverse different ECMP 
      paths to monitor the liveness for an SR Policy.</t>

      <t>Forwarding plane has various hashing functions available to forward
      packets on specific ECMP paths. In IPv4 header of the PM probe messages,
      sweeping of Destination Address in 127/8 range can be used to exercise different 
      ECMP paths in the loopback mode as long as the return path is also SR-MPLS.
      The Flow Label field in the outer IPv6 header can also be used for sweeping 
      to exercise different ECMP paths.</t>
   </section>

   <section anchor="sect-7" title="Security Considerations" toc="default">
      <t>The Performance Delay and Liveness Monitoring is intended for deployment in
      the well-managed private and service provider networks. As such, it assumes
      that a node involved in a monitoring operation has previously verified
      the integrity of the path and the identity of the far-end reflector
      node. If desired, attacks can be mitigated by performing basic
      validation and sanity checks, at the sender, of the counter or timestamp
      fields in received measurement response messages. The minimal state
      associated with these protocols also limits the extent of disruption
      that can be caused by a corrupt or invalid message to a single
      query/response cycle. Use of HMAC-SHA-256 in the authenticated mode
      protects the data integrity of the probe messages. Cryptographic
      measures may be enhanced by the correct configuration of access-control
      lists and firewalls.</t>
   </section>

   <section anchor="sect-8" title="IANA Considerations" toc="default">
      <t>IANA maintains the "Special-Purpose Multiprotocol Label Switching
      (MPLS) Label Values" registry (see
      &lt;https://www.iana.org/assignments/mpls-label-values/mpls-label-values.xml&gt;).
      IANA is requested to allocate Timestamp Label value from the "Extended
      Special-Purpose MPLS Label Values" registry:</t>

      <figure>
        <artwork>
    +-------------+-------------------------+---------------+
    | Value       | Description             | Reference     |
    +-------------+-------------------------+---------------+
    | TBA1        | Timestamp Label         | This document |
    +-------------+-------------------------+---------------+
      </artwork>
      </figure>

      <t>IANA is requested to allocate, within the "SRv6 Endpoint Behaviors
      Registry" sub-registry belonging to the top-level "Segment-routing with
      IPv6 data plane (SRv6) Parameters" registry <xref
      target="I-D.ietf-spring-srv6-network-programming"/>, the following
      allocations:</t>

      <figure>
        <artwork>     
    +-------------+---------------------------------+---------------+
    | Value       | Endpoint Behavior               | Reference     |
    +-------------+---------------------------------+---------------+
    | TBA2        | END.TSF (Timestamp and Forward) | This document |
    +-------------+---------------------------------+---------------+</artwork>
      </figure>
   </section>
  </middle>

  <back>
    <references title="Normative References">
      &RFC0768;
      &RFC2119;
      &RFC4656;
      &RFC5357;
      &RFC8174;
      &RFC8762;
    </references>

    <references title="Informative References">
      <reference anchor="IEEE1588">
        <front>
          <title>1588-2008 IEEE Standard for a Precision Clock Synchronization
          Protocol for Networked Measurement and Control Systems</title>

          <author>
            <organization>IEEE</organization>
          </author>

          <date month="March" year="2008"/>
        </front>
      </reference>

      &RFC7880;
      &RFC8186;
      &RFC8402;
      &RFC8754;
      &I-D.gandhi-spring-twamp-srpm;
      &I-D.gandhi-spring-stamp-srpm;
      &I-D.ietf-spring-segment-routing-policy;
      &I-D.ietf-spring-srv6-network-programming;
      &I-D.ietf-pce-binding-label-sid;
      &I-D.ietf-pce-sr-bidir-path;
    </references>

    <section anchor="acknowledgments" numbered="no" title="Acknowledgments">
      <t>TBD</t>
    </section>
  </back>
</rfc>